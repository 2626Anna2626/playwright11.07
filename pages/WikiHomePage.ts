import { Page } from '@playwright/test'; // Импортируем Page — это встроенный тип в Playwright, который представляет собой вкладку браузера. Через него можно управлять страницей: переходить по URL, кликать, искать элементы и т.д.

/** Стартовая страница wikipedia.org (выбор языка) */
export class WikiHomePage {
    constructor(private page: Page) {}
    /*Создаём класс WikiHomePage, представляющий главную страницу
Wikipedia (где выбирается язык).
В конструктор мы передаём объект page, чтобы иметь доступ к действиям
в браузере.
private page: Page сохраняет page в переменную this.page, но делает её
недоступной извне (инкапсуляция)

Принцип	Объяснение простыми словами
Инкапсуляция	Скрыть детали, показать только нужное
Наследование	Брать "черты" родителя
Полиморфизм	Один интерфейс — много реализаций */

    /** Открыть wikipedia.org */
    async goto() {
        await this.page.goto('https://www.wikipedia.org');
    }
    /*Метод goto() открывает главную страницу Википедии.
await нужен, потому что page.goto() — это асинхронная операция (браузер
загружает страницу).*/

    /** Клик по ссылке нужного языка (по умолчанию — «Русский») */
    async chooseLanguage(language = 'Русский') {
        await this.page.getByRole('link', { name: language }).click();
    }
    /*Метод chooseLanguage() нажимает на ссылку нужного языка.
По умолчанию используется 'Русский', но ты можешь передать,
например, 'English'.
Используется метод getByRole() — Playwright рекомендует его как более
надёжный способ поиска (доступность, а не CSS).
click() нажимает на найденную ссылку.*/
}